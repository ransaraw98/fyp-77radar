#*****************************************************************************************
# Vivado (TM) v2019.1 (64-bit)
#
# project.tcl: Tcl script for re-creating project 'dma_ex_fft_v2_0'
#
# Generated by Vivado on Fri Apr 07 11:24:26 +0530 2023
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "C:/Users/menuw/Documents/Modules/FYP/fyp-77radar/hdl/dma_ex_fft_v2_0/archive_project_summary.txt"
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/Users/menuw/Documents/Modules/FYP/fyp-77radar/hdl/dma_ex_fft_v2_0/dma_ex_fft_v2_0.srcs/sources_1/bd/design_1/design_1.bd"
#    "C:/Users/menuw/Documents/Modules/FYP/fyp-77radar/hdl/dma_ex_fft_v2_0/dma_ex_fft_v2_0.srcs/sources_1/imports/hdl/design_1_wrapper.v"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# target_board can be: zedboard, zc702
set target_board zedboard

#-----------------------------------------------------------
# Constant parameters
#-----------------------------------------------------------
set xil_proj_name radar_sp
set design_ver v1_0
set underscore _
set design_name_full "$xil_proj_name$underscore$design_ver"
puts "NOTE: This file must be executed from the project's 'tcl' directory"
puts "NOTE: Generating design targeting $target_board. You can change the target_board variable in $xil_proj_name.tcl to target another board."

#-----------------------------------------------------------
# Archive existing design if it already exists
#-----------------------------------------------------------
puts "NOTE: Archive existing $design_name_full design if it exists"
set format_date [clock format [clock seconds] -format %Y%m%d_%H%m]
set date_suffix $underscore$format_date
if { [file exists "../proj/$design_name_full"] == 1 } { 
  puts "Moving existing $design_name_full to time-stamped suffix $design_name_full$date_suffix"
  file rename "../proj/$design_name_full" "../proj/$design_name_full$date_suffix"
} else {
  file mkdir ../proj
}

variable script_file
set script_file "project.tcl"

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../dsp_v1"]"

# Create project
create_project ${xil_proj_name} ../proj/${xil_proj_name} -part xc7z020clg484-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "em.avnet.com:zed:part0:1.4" -objects $obj
set_property -name "compxlib.activehdl_compiled_library_dir" -value "$proj_dir/${xil_proj_name}.cache/compile_simlib/activehdl" -objects $obj
set_property -name "compxlib.funcsim" -value "1" -objects $obj
set_property -name "compxlib.ies_compiled_library_dir" -value "$proj_dir/${xil_proj_name}.cache/compile_simlib/ies" -objects $obj
set_property -name "compxlib.modelsim_compiled_library_dir" -value "$proj_dir/${xil_proj_name}.cache/compile_simlib/modelsim" -objects $obj
set_property -name "compxlib.overwrite_libs" -value "0" -objects $obj
set_property -name "compxlib.questa_compiled_library_dir" -value "$proj_dir/${xil_proj_name}.cache/compile_simlib/questa" -objects $obj
set_property -name "compxlib.riviera_compiled_library_dir" -value "$proj_dir/${xil_proj_name}.cache/compile_simlib/riviera" -objects $obj
set_property -name "compxlib.timesim" -value "1" -objects $obj
set_property -name "compxlib.vcs_compiled_library_dir" -value "$proj_dir/${xil_proj_name}.cache/compile_simlib/vcs" -objects $obj
set_property -name "compxlib.xsim_compiled_library_dir" -value "" -objects $obj
set_property -name "corecontainer.enable" -value "0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.board_id" -value "zed" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.rom.debug_type" -value "0" -objects $obj
set_property -name "dsa.rom.prom_type" -value "0" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_optional_runs_sta" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "generate_ip_upgrade_log" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_interface_inference_priority" -value "" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${xil_proj_name}.cache/ip" -objects $obj
set_property -name "legacy_ip_repo_paths" -value "" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "project_type" -value "Default" -objects $obj
set_property -name "pr_flow" -value "0" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${xil_proj_name}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "sim.use_ip_compiled_libs" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "All" -objects $obj
set_property -name "target_language" -value "Verilog" -objects $obj
set_property -name "target_simulator" -value "XSim" -objects $obj
set_property -name "tool_flow" -value "Vivado" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "1" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "1" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "1" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj
set_property -name "xsim.array_display_limit" -value "1024" -objects $obj
set_property -name "xsim.radix" -value "hex" -objects $obj
set_property -name "xsim.time_unit" -value "ns" -objects $obj
set_property -name "xsim.trace_limit" -value "65536" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

#-----------------------------------------------------------
# Add HDL IP repositories
#-----------------------------------------------------------
set_property ip_repo_paths "../lib" [current_fileset]
update_ip_catalog -rebuild

#-----------------------------------------------------------
# Create BD source
#-----------------------------------------------------------
puts "Creating block diagram..."
source "./bd_$target_board.tcl"
make_wrapper -files [get_files "../proj/$xil_proj_name/$xil_proj_name.srcs/sources_1/bd/design_1/design_1.bd"] -top
import_files -force -norecurse "../proj/$xil_proj_name/$xil_proj_name.srcs/sources_1/bd/design_1/hdl/design_1_wrapper.v"

#-----------------------------------------------------------
# Generate bitstream
#-----------------------------------------------------------
launch_runs impl_1 -to_step write_bitstream
wait_on_run impl_1

#-----------------------------------------------------------
# Export hardware for SDK
#-----------------------------------------------------------
file mkdir "../proj/$xil_proj_name/$xil_proj_name.sdk"
file copy -force "../proj/$xil_proj_name/$xil_proj_name.runs/impl_1/design_1_wrapper.sysdef" "../proj/$xil_proj_name/$xil_proj_name.sdk/design_1_wrapper.hdf"

